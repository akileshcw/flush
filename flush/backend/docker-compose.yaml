# version: "3.8"

services:
  # RabbitMQ for event-driven communication
  rabbitmq:
    image: rabbitmq:4.1-management
    ports:
      - "5672:5672"
      - "15672:15672"
    expose:
      - "5672"
      - "15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    restart: unless-stopped

  # Postgres database for Kong to store consumer data
  # postgres:
  #   image: postgres:13
  #   environment:
  #     POSTGRES_USER: kong
  #     POSTGRES_PASSWORD: kong
  #     POSTGRES_DB: kong
  #   volumes:
  #     - kong_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432" # Expose PostgreSQL port for manual access if needed
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U kong"]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 5
  #   restart: unless-stopped

  # Kong API Gateway
  kong:
    image: kong:3.9
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /kong/declarative/kong.yml
      # KONG_PG_HOST: "postgres"
      # KONG_PG_USER: "kong"
      # KONG_PG_PASSWORD: "kong"
      # KONG_PG_DATABASE: "kong"
      KONG_PROXY_ACCESS_LOG: "/dev/stdout"
      KONG_ADMIN_ACCESS_LOG: "/dev/stdout"
      KONG_PROXY_ERROR_LOG: "/dev/stderr"
      KONG_ADMIN_ERROR_LOG: "/dev/stderr"
      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
    volumes:
      - ./api-gateway/kong.yml:/kong/declarative/kong.yml
    ports:
      - "8000:8000" # Proxy port
      - "8001:8001" # Admin API port
      - "8443:8443" # Proxy SSL (optional, if used)
      - "8444:8444" # Admin SSL (optional, if used)
    depends_on:
      # - postgres
      - auth-service
      - patient-service
      - appointment-service
      - doctor-service
      - patient-portal-service
      - notification-service
      # - branch-service
      # - report-service
      # - equipment-service
      # - feedback-service

  # Authentication Service
  auth-service:
    build: ./auth-service
    volumes:
      - ./auth-service:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - DATABASE_URL=postgres://auth_user:auth_pass@auth-db:5432/auth_db
      - BETTER_AUTH_SECRET=your_jwt_secret
    depends_on:
      - auth-db

  # Patient Service
  patient-service:
    build: ./patient-service
    environment:
      - DATABASE_URL=postgres://patient_user:patient_pass@patient-db:5432/patient_db
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
    depends_on:
      - patient-db
      - rabbitmq

  # Appointment Service
  appointment-service:
    build: ./appointment-service
    environment:
      - DATABASE_URL=postgres://appointment_user:appointment_pass@appointment-db:5432/appointment_db
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
    depends_on:
      - appointment-db
      - rabbitmq

  # Doctor Service
  doctor-service:
    build: ./doctor-service
    environment:
      - DATABASE_URL=postgres://doctor_user:doctor_pass@doctor-db:5432/doctor_db
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
    depends_on:
      - doctor-db
      - rabbitmq

  # Patient Portal Service
  patient-portal-service:
    build: ./patient-portal-service
    environment:
      - DATABASE_URL=postgres://portal_user:portal_pass@portal-db:5432/portal_db
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
    depends_on:
      - portal-db
      - rabbitmq

  # Notification Service
  notification-service:
    build: ./notification-service
    environment:
      - DATABASE_URL=postgres://notification_user:notification_pass@notification-db:5432/notification_db
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
    depends_on:
      - notification-db
      - rabbitmq

  #Branch Service
  # branch-service:
  #   build: ./branch-service
  #   environment:
  #     - DATABASE_URL=postgres://branch_user:branch_pass@branch-db:5432/branch_db
  #     - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
  #   depends_on:
  #     - branch-db
  #     - rabbitmq

  #Report Service
  # report-service:
  #   build: ./report-service
  #   environment:
  #     - DATABASE_URL=postgres://report_user:report_pass@report-db:5432/report_db
  #     - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
  #   depends_on:
  #     - report-db
  #     - rabbitmq

  #Equipment Service
  # equipment-service:
  #   build: ./equipment-service
  #   environment:
  #     - DATABASE_URL=postgres://equipment_user:equipment_pass@equipment-db:5432/equipment_db
  #     - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
  #   depends_on:
  #     - equipment-db
  #     - rabbitmq

  #Feedback Service
  # feedback-service:
  #   build: ./feedback-service
  #   environment:
  #     - DATABASE_URL=postgres://feedback_user:feedback_pass@feedback-db:5432/feedback_db
  #     - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
  #   depends_on:
  #     - feedback-db
  #     - rabbitmq

  # Databases (one per service)
  auth-db:
    image: postgres:13
    environment:
      - POSTGRES_USER=auth_user
      - POSTGRES_PASSWORD=auth_pass
      - POSTGRES_DB=auth_db
    ports:
      - "5432:5432"
    volumes:
      - auth_data:/var/lib/postgresql/data

  patient-db:
    image: postgres:13
    environment:
      - POSTGRES_USER=patient_user
      - POSTGRES_PASSWORD=patient_pass
      - POSTGRES_DB=patient_db
    volumes:
      - patient_data:/var/lib/postgresql/data

  appointment-db:
    image: postgres:13
    environment:
      - POSTGRES_USER=appointment_user
      - POSTGRES_PASSWORD=appointment_pass
      - POSTGRES_DB=appointment_db
    volumes:
      - appointment_data:/var/lib/postgresql/data

  doctor-db:
    image: postgres:13
    environment:
      - POSTGRES_USER=doctor_user
      - POSTGRES_PASSWORD=doctor_pass
      - POSTGRES_DB=doctor_db
    volumes:
      - doctor_data:/var/lib/postgresql/data

  portal-db:
    image: postgres:13
    environment:
      - POSTGRES_USER=portal_user
      - POSTGRES_PASSWORD=portal_pass
      - POSTGRES_DB=portal_db
    volumes:
      - portal_data:/var/lib/postgresql/data

  notification-db:
    image: postgres:13
    environment:
      - POSTGRES_USER=notification_user
      - POSTGRES_PASSWORD=notification_pass
      - POSTGRES_DB=notification_db
    volumes:
      - notification_data:/var/lib/postgresql/data

  branch-db:
    image: postgres:13
    environment:
      - POSTGRES_USER=branch_user
      - POSTGRES_PASSWORD=branch_pass
      - POSTGRES_DB=branch_db
    volumes:
      - branch_data:/var/lib/postgresql/data

  report-db:
    image: postgres:13
    environment:
      - POSTGRES_USER=report_user
      - POSTGRES_PASSWORD=report_pass
      - POSTGRES_DB=report_db
    volumes:
      - report_data:/var/lib/postgresql/data

  equipment-db:
    image: postgres:13
    environment:
      - POSTGRES_USER=equipment_user
      - POSTGRES_PASSWORD=equipment_pass
      - POSTGRES_DB=equipment_db
    volumes:
      - equipment_data:/var/lib/postgresql/data

  feedback-db:
    image: postgres:13
    environment:
      - POSTGRES_USER=feedback_user
      - POSTGRES_PASSWORD=feedback_pass
      - POSTGRES_DB=feedback_db
    volumes:
      - feedback_data:/var/lib/postgresql/data

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "8081:80"
    depends_on:
      - auth-db
      - patient-db
      - appointment-db
      - doctor-db
      - portal-db

volumes:
  auth_data:
  patient_data:
  appointment_data:
  doctor_data:
  portal_data:
  notification_data:
  branch_data:
  report_data:
  equipment_data:
  feedback_data:
  # kong_data:
